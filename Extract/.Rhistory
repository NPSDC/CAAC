})
mod.canc.liver$actual.level.50[c(2*i +1 , 2*i + 2)] <- levels[1]
mod.canc.liver$actual.level.75[c(2*i +1 , 2*i + 2)] <- levels[2]
mod.canc.liver$actual.level.90[c(2*i +1 , 2*i + 2)] <- levels[3]
mod.canc.liver$actual.level.100[c(2*i +1 , 2*i + 2)] <- levels[4]
i = i + 1
}
hep.missing <- find.missing(unique.cancer.genes, hepatocytes$Gene)
bile.duct.missing <- find.missing(unique.cancer.genes, bile.duct$Gene)
#Genes common in hepatocyte and liver cancer
hep.present <- as.character(unique.cancer.genes[match(hepatocytes$Gene, unique.cancer.genes)])
bile.present <- as.character(unique.cancer.genes[match(bile.duct$Gene, unique.cancer.genes)])
indexes.hep <- match(hep.present, mod.canc.liver$Gene)
indexes.bile <- match(bile.present, mod.canc.liver$Gene)
l.hep = length(hepatocytes$Gene) #Total number of genes in hepatocytes
l.bile = length(bile.duct$Gene)
hepatocytes$Canc.Level.50 = mod.canc.liver$actual.level.50[indexes.hep] #Copying data(of proportions)
hepatocytes$Canc.Level.75 = mod.canc.liver$actual.level.75[indexes.hep] #from mod.canc.liver to hepatocytes
hepatocytes$Canc.Level.90 =  mod.canc.liver$actual.level.90[indexes.hep]
hepatocytes$Canc.Level.100 = mod.canc.liver$actual.level.100[indexes.hep]
bile.duct$Canc.Level.50 = mod.canc.liver$actual.level.50[indexes.bile] #Copying data(of proportions)
bile.duct$Canc.Level.75 = mod.canc.liver$actual.level.75[indexes.bile] #from mod.canc.liver to hepatocytes
bile.duct$Canc.Level.90 =  mod.canc.liver$actual.level.90[indexes.bile]
bile.duct$Canc.Level.100 = mod.canc.liver$actual.level.100[indexes.bile]
ans.hep = get.mismatch(hepatocytes$Level, hepatocytes$Gene, list(hepatocytes$Canc.Level.50,
hepatocytes$Canc.Level.75, hepatocytes$Canc.Level.90, hepatocytes$Canc.Level.100), l.hep)
ans.bile = get.mismatch(bile.duct$Level, bile.duct$Gene,list(bile.duct$Canc.Level.50, bile.duct$Canc.Level.75, bile.duct$Canc.Level.90,
bile.duct$Canc.Level.100), l.bile)
View(normal.liver)
View(normal.liver)
hcc_data = read.csv('C:/Users/NoorPratap/Dropbox/honours/Extract/hcc_data/msb145122-sup-0006-Dataset3/Dataset 3.csv')
lev = levels(hcc_data$Patient.2177)
genes = as.character(hcc_data$GENES[which( hcc_data$Patient.2177 == lev[3] | hcc_data$Patient.2177 == lev[1] |
hcc_data$Patient.2177 == lev[4])]) #contains genes present(high,med,low) in patient 1
write(genes, 'hcc_genes.txt') #contains all present genes in patient 1 in high conc
hepatocytes_all = normal.liver[which(normal.liver$Cell.type == "hepatocytes"),] # Will combine high,med, low
hepatocytes_all$Level = set.level(hepatocytes_all$Level, conc.hep, 2)
genes.normal.hep.present = as.character(hepatocytes_all$Gene[which(hepatocytes_all$Level == 'Present')])
write(genes.normal.hep.present, 'hep_normal_genes.txt')
mod.canc.liver.2 = data.frame(Gene = rep(unique(cancer.liver$Gene),2),  #Contains the modified levels of liver cancer
Level = factor(rep(c("Present", "Not detected"), l)), #and their levels w.r.t proportions
count = rep(0L, 2*l), total = rep(0L, 2*l))
i = 0
for (x in unique.cancer.genes) #Sets the modified cancer liver with thresholds and counts
{
genes.indexes = cancer.liver$Gene == x
mod.canc.liver.2$Gene[c(2*i +1 , 2*i + 2)] <- x
mod.canc.liver.2$Level[c(2*i +1 , 2*i + 2)] <- c("Present", "Not detected")
mod.canc.liver.2$count[c(2*i +1 , 2*i + 2)] <- c(cancer.liver$Count.patients[which(genes.indexes & high.indexes)]
+ cancer.liver$Count.patients[which(genes.indexes & med.indexes)]
+ cancer.liver$Count.patients[which(genes.indexes & low.indexes)],
cancer.liver$Count.patients[which(genes.indexes & not.det.indexes)] )
mod.canc.liver.2$total[c(2*i +1 , 2*i + 2)] <- mod.canc.liver.2$count[2*i + 1] + mod.canc.liver.2$count[2*i + 2]
levels = sapply(c(0.5, 0.75, 0.9, 1), function(x)
{
calculate.level(x, mod.canc.liver.2$count[c(2*i + 1)], mod.canc.liver.2$count[c(2*i + 2)], c('Present', 'Not detected'))
})
mod.canc.liver.2$actual.level.50[c(2*i +1 , 2*i + 2)] <- levels[1]
mod.canc.liver.2$actual.level.75[c(2*i +1 , 2*i + 2)] <- levels[2]
mod.canc.liver.2$actual.level.90[c(2*i +1 , 2*i + 2)] <- levels[3]
mod.canc.liver.2$actual.level.100[c(2*i +1 , 2*i + 2)] <- levels[4]
i = i + 1
}
m = mod.canc.liver.2
hepatocytes_all$Canc.Level.50 = m$actual.level.50[indexes.hep]
hepatocytes_all$Canc.Level.75 = m$actual.level.75[indexes.hep]
hepatocytes_all$Canc.Level.90 = m$actual.level.90[indexes.hep]
hepatocytes_all$Canc.Level.100 = m$actual.level.100[indexes.hep]
View(mod.canc.liver.2)
View(mod.canc.liver.2)
View(hepatocytes_all)
View(hepatocytes_all)
list.cancers = list(hepatocytes_all$Canc.Level.50, hepatocytes_all$Canc.Level.75, hepatocytes_all$Canc.Level.90, hepatocytes_all$Canc.Level.100)
genes.cancer = sapply(   #contains all genes associated with different levels of cancer (Present as well as not detected but not NA)
list.cancers, function(x){
#print(x)
as.character(hepatocytes_all$Gene[is.na(x) == F])
#print(a)
}
)
names(genes.cancer) <- c("50", "75", "90", "100")
genes.cancer.present <- sapply(list.cancers, function(x) #genes present in all different levels
{
hepatocytes_all$Gene[is.na(x) == F & x == 'Present' ]
})
names(genes.cancer.present) <- c("50", "75", "90", "100")
genes.cancer.absent <- sapply(list.cancers, function(x)
{
hepatocytes_all$Gene[is.na(x) == F & x == 'Not detected']
})
names(genes.cancer.absent) <- c("50", "75", "90", "100")
length(genes.cancer.present)
length(genes.cancer.present$`50`)
length(genes.cancer.absent$`50`)
length(genes.cancer$`50`)
length(hepatocytes_all$Gene)
length(m$Gene)
length(indexes.hep)
length(hepatocytes_all$Canc.Level.50)
length(genes.cancer$`50`)
is.na(list.cancers[1])
sum(is.na(hepatocytes_all$Canc.Level.50))
sum(is.na(m$actual.level.50))
indexes.hep[-1]
as.character(indexes.hep)[-1]
sum(is.na(m$actual.level.50))
sum(is.na(m$actual.level.50[indexes.hep]))
length(m$actual.level.50)
length(m$actual.level.50)/2
length(unique(m$Gene))
length(unique(normal$Gene))
canc = read.csv('../cancer.csv') #The original cancer data
unique_genes = unique(canc$Gene) #The unique genes in cancer
unique.genes = unique(canc$Gene) #The unique genes in cancer
length(unique.genes)
cancer.liver = canc[canc$Tumor == 'liver cancer',] #Contains only liver cancer data
mod.canc.liver = data.frame(Gene = rep(unique(cancer.liver$Gene),2),  #Contains the modified levels of liver cancer
Level = factor(rep(c("High", "Low"), l)), #and their levels w.r.t proportions
count = rep(0L, 2*l), total = rep(0L, 2*l))
l = length(unique(cancer.liver$Gene)) #Length of unique genes
mod.canc.liver = data.frame(Gene = rep(unique(cancer.liver$Gene),2),  #Contains the modified levels of liver cancer
Level = factor(rep(c("High", "Low"), l)), #and their levels w.r.t proportions
count = rep(0L, 2*l), total = rep(0L, 2*l))
i = 0
conc.cancer = levels(cancer.liver$Level)
unique.cancer.genes = as.character(unique(cancer.liver$Gene))
high.indexes = cancer.liver$Level == conc.cancer[1]
med.indexes = cancer.liver$Level == conc.cancer[3]  #Medium
low.indexes = cancer.liver$Level == conc.cancer[2]
not.det.indexes = cancer.liver$Level == conc.cancer[4] #Not Detected
for (x in unique.cancer.genes) #Sets the modified cancer liver with thresholds and counts
{
genes.indexes = cancer.liver$Gene == x
mod.canc.liver$Gene[c(2*i +1 , 2*i + 2)] <- x
mod.canc.liver$Level[c(2*i +1 , 2*i + 2)] <- c("High", "Low")
mod.canc.liver$count[c(2*i +1 , 2*i + 2)] <- c(cancer.liver$Count.patients[which(genes.indexes & high.indexes)]
+ cancer.liver$Count.patients[which(genes.indexes & med.indexes)],
cancer.liver$Count.patients[which(genes.indexes & low.indexes)] +
cancer.liver$Count.patients[which(genes.indexes & not.det.indexes)] )
mod.canc.liver$total[c(2*i +1 , 2*i + 2)] <- mod.canc.liver$count[2*i + 1] + mod.canc.liver$count[2*i + 2]
levels = sapply(c(0.5, 0.75, 0.9, 1), function(x)
{
calculate.level(x, mod.canc.liver$count[c(2*i + 1)], mod.canc.liver$count[c(2*i + 2)], c('High', 'Low'))
})
mod.canc.liver$actual.level.50[c(2*i +1 , 2*i + 2)] <- levels[1]
mod.canc.liver$actual.level.75[c(2*i +1 , 2*i + 2)] <- levels[2]
mod.canc.liver$actual.level.90[c(2*i +1 , 2*i + 2)] <- levels[3]
mod.canc.liver$actual.level.100[c(2*i +1 , 2*i + 2)] <- levels[4]
i = i + 1
}
#Missing genes in hepatocyte, bile.duct
hep.missing <- find.missing(unique.cancer.genes, hepatocytes$Gene)
bile.duct.missing <- find.missing(unique.cancer.genes, bile.duct$Gene)
#Genes common in hepatocyte and liver cancer
hep.present <- as.character(unique.cancer.genes[match(hepatocytes$Gene, unique.cancer.genes)])
bile.present <- as.character(unique.cancer.genes[match(bile.duct$Gene, unique.cancer.genes)])
indexes.hep <- match(hep.present, mod.canc.liver$Gene)
indexes.bile <- match(bile.present, mod.canc.liver$Gene)
l.hep = length(hepatocytes$Gene) #Total number of genes in hepatocytes
l.bile = length(bile.duct$Gene)
hepatocytes$Canc.Level.50 = mod.canc.liver$actual.level.50[indexes.hep] #Copying data(of proportions)
hepatocytes$Canc.Level.75 = mod.canc.liver$actual.level.75[indexes.hep] #from mod.canc.liver to hepatocytes
hepatocytes$Canc.Level.90 =  mod.canc.liver$actual.level.90[indexes.hep]
hepatocytes$Canc.Level.100 = mod.canc.liver$actual.level.100[indexes.hep]
bile.duct$Canc.Level.50 = mod.canc.liver$actual.level.50[indexes.bile] #Copying data(of proportions)
bile.duct$Canc.Level.75 = mod.canc.liver$actual.level.75[indexes.bile] #from mod.canc.liver to hepatocytes
bile.duct$Canc.Level.90 =  mod.canc.liver$actual.level.90[indexes.bile]
bile.duct$Canc.Level.100 = mod.canc.liver$actual.level.100[indexes.bile]
ans.hep = get.mismatch(hepatocytes$Level, hepatocytes$Gene, list(hepatocytes$Canc.Level.50,
hepatocytes$Canc.Level.75, hepatocytes$Canc.Level.90, hepatocytes$Canc.Level.100), l.hep)
ans.bile = get.mismatch(bile.duct$Level, bile.duct$Gene,list(bile.duct$Canc.Level.50, bile.duct$Canc.Level.75, bile.duct$Canc.Level.90,
bile.duct$Canc.Level.100), l.bile)
hepatocytes_all = normal.liver[which(normal.liver$Cell.type == "hepatocytes"),] # Will combine high,med, low
hepatocytes_all$Level = set.level(hepatocytes_all$Level, conc.hep, 2)
genes.normal.hep.present = as.character(hepatocytes_all$Gene[which(hepatocytes_all$Level == 'Present')])
write(genes.normal.hep.present, 'hep_normal_genes.txt')
mod.canc.liver.2 = data.frame(Gene = rep(unique(cancer.liver$Gene),2),  #Contains the modified levels of liver cancer
Level = factor(rep(c("Present", "Not detected"), l)), #and their levels w.r.t proportions
count = rep(0L, 2*l), total = rep(0L, 2*l))
i = 0
for (x in unique.cancer.genes) #Sets the modified cancer liver with thresholds and counts
{
genes.indexes = cancer.liver$Gene == x
mod.canc.liver.2$Gene[c(2*i +1 , 2*i + 2)] <- x
mod.canc.liver.2$Level[c(2*i +1 , 2*i + 2)] <- c("Present", "Not detected")
mod.canc.liver.2$count[c(2*i +1 , 2*i + 2)] <- c(cancer.liver$Count.patients[which(genes.indexes & high.indexes)]
+ cancer.liver$Count.patients[which(genes.indexes & med.indexes)]
cancer.liver$Count.patients[which(genes.indexes & not.det.indexes)] )
+ cancer.liver$Count.patients[which(genes.indexes & low.indexes)],
mod.canc.liver.2$total[c(2*i +1 , 2*i + 2)] <- mod.canc.liver.2$count[2*i + 1] + mod.canc.liver.2$count[2*i + 2]
levels = sapply(c(0.5, 0.75, 0.9, 1), function(x)
{
calculate.level(x, mod.canc.liver.2$count[c(2*i + 1)], mod.canc.liver.2$count[c(2*i + 2)], c('Present', 'Not detected'))
})
mod.canc.liver.2$actual.level.50[c(2*i +1 , 2*i + 2)] <- levels[1]
mod.canc.liver.2 = data.frame(Gene = rep(unique(cancer.liver$Gene),2),  #Contains the modified levels of liver cancer
Level = factor(rep(c("Present", "Not detected"), l)), #and their levels w.r.t proportions
count = rep(0L, 2*l), total = rep(0L, 2*l))
i = 0
length(unique.cancer.genes)
for (x in unique.cancer.genes) #Sets the modified cancer liver with thresholds and counts
{
genes.indexes = cancer.liver$Gene == x
mod.canc.liver.2$Gene[c(2*i +1 , 2*i + 2)] <- x
mod.canc.liver.2$Level[c(2*i +1 , 2*i + 2)] <- c("Present", "Not detected")
mod.canc.liver.2$count[c(2*i +1 , 2*i + 2)] <- c(cancer.liver$Count.patients[which(genes.indexes & high.indexes)]
+ cancer.liver$Count.patients[which(genes.indexes & med.indexes)]
+ cancer.liver$Count.patients[which(genes.indexes & low.indexes)],
cancer.liver$Count.patients[which(genes.indexes & not.det.indexes)] )
mod.canc.liver.2$total[c(2*i +1 , 2*i + 2)] <- mod.canc.liver.2$count[2*i + 1] + mod.canc.liver.2$count[2*i + 2]
levels = sapply(c(0.5, 0.75, 0.9, 1), function(x)
{
calculate.level(x, mod.canc.liver.2$count[c(2*i + 1)], mod.canc.liver.2$count[c(2*i + 2)], c('Present', 'Not detected'))
})
mod.canc.liver.2$actual.level.50[c(2*i +1 , 2*i + 2)] <- levels[1]
mod.canc.liver.2$actual.level.75[c(2*i +1 , 2*i + 2)] <- levels[2]
mod.canc.liver.2$actual.level.90[c(2*i +1 , 2*i + 2)] <- levels[3]
mod.canc.liver.2$actual.level.100[c(2*i +1 , 2*i + 2)] <- levels[4]
i = i + 1
}
m = mod.canc.liver.2
hepatocytes_all$Canc.Level.50 = m$actual.level.50[indexes.hep]
hepatocytes_all$Canc.Level.75 = m$actual.level.75[indexes.hep]
hepatocytes_all$Canc.Level.90 = m$actual.level.90[indexes.hep]
hepatocytes_all$Canc.Level.100 = m$actual.level.100[indexes.hep]
####Contains presence or absence of cancer w.r.t each gene in different levels of cancer
list.cancers = list(hepatocytes_all$Canc.Level.50, hepatocytes_all$Canc.Level.75, hepatocytes_all$Canc.Level.90, hepatocytes_all$Canc.Level.100)
genes.cancer = sapply(   #contains all genes associated with different levels of cancer (Present as well as not detected but not NA)
list.cancers, function(x){
#print(x)
as.character(hepatocytes_all$Gene[is.na(x) == F])
#print(a)
}
)
len(genes.cancer$'50')
names(genes.cancer) <- c("50", "75", "90", "100")
length(genes.cancer$'50')
genes.cancer.present <- sapply(list.cancers, function(x) #genes present in all different levels
{
hepatocytes_all$Gene[is.na(x) == F & x == 'Present' ]
})
names(genes.cancer.present) <- c("50", "75", "90", "100")
genes.cancer.absent <- sapply(list.cancers, function(x)
{
hepatocytes_all$Gene[is.na(x) == F & x == 'Not detected']
})
names(genes.cancer.absent) <- c("50", "75", "90", "100")
find.gene.mismatch <- function(gene.list.1, gene.list.2)
{
return(gene.list.2[is.na(match(gene.list.1, gene.list.2)) == F])
}
diff.expressed = get.mismatch(hepatocytes_all$Level, hepatocytes_all$Gene, list.cancers, length(hepatocytes_all$Gene))
diff.expressed.present = mapply(function(x,y)
{
find.gene.mismatch(x,y)
names(diff.expressed) <- c("50", "75", "90", "100")
},genes.cancer.present, diff.expressed)
names(diff.expressed.present) <- c("50", "75", "90", "100")
length(genes.cancer.present$`50`)
length(genes.cancer.absent$`50`)
length(diff.expressed.present$'50')
find.gene.mismatch <- function(gene.list.1, gene.list.2)
{
return(gene.list.2[match(gene.list.1, gene.list.2)])
}
diff.expressed.present = mapply(function(x,y)
{
find.gene.mismatch(x,y)
},genes.cancer.present, diff.expressed)
names(diff.expressed) <- c("50", "75", "90", "100")
names(diff.expressed.present) <- c("50", "75", "90", "100")
length(diff.expressed.present$'50')
length(match(genes.cancer.present$`50`, diff.expressed$`50`))
length(diff.expressed$`50`)
length(diff.expressed$`100`)
match(c(1), c(2,1,3))
match(c(1,5,6), c(2,1,3))
sum(!is.na(match(genes.cancer.present$`50`, diff.expressed$`50`))
)
sum(!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`)))
find.gene.mismatch <- function(gene.list.1, gene.list.2)
{
return(gene.list.2[!is.na(match(gene.list.1, gene.list.2))])
}
diff.expressed.present = mapply(function(x,y)
{
find.gene.mismatch(x,y)
},genes.cancer.present, diff.expressed)
names(diff.expressed.present) <- c("50", "75", "90", "100")
length(diff.expressed.present$`100`)
write(diff.expressed.present$`50`, 'diff.expressed.50.txt')
write(diff.expressed.present$`50`, 'diff.expressed.50.txt')
write(diff.expressed.present$`75`, 'diff.expressed.75.txt')
write(diff.expressed.present$`90`, 'diff.expressed.90.txt')
write(diff.expressed.present$`100`, 'diff.expressed.100.txt')
write(diff.expressed.present$`50`, 'diff.expressed.present.50.txt')
write(diff.expressed.present$`75`, 'diff.expressed.present.75.txt')
write(diff.expressed.present$`90`, 'diff.expressed.present.90.txt')
write(diff.expressed.present$`100`, 'diff.expressed.present.100.txt')
length(diff.expressed.present$`100`)
diff.expressed.present[118]
diff.expressed.present[10]
diff.expressed.present[9]
diff.expressed.present$`100`[9]
diff.expressed.present$`100`[100]
diff.expressed.present$`100`[30]
diff.expressed$`100`[100]
diff.expressed$`100`[300]
diff.expressed$`100`[318]
diff.expressed$`100`[317]
diff.expressed$`100`[315]
length(diff.expressed$`100`)
diff.expressed$`100`[310]
length(diff.expressed.present$`100`)
length(diff.expressed.present$`50`)
diff.expressed.present[1613]
diff.expressed.present[1612]
diff.expressed.present[1000]
diff.expressed.present[100]
diff.expressed.present$`50`[100]
diff.expressed.present$`50`[1613]
diff.expressed.present$`50`[1610]
diff.expressed.present$`50`[1010]
diff.expressed.present$`50`[10]
diff.expressed.present$`50`[11]
diff.expressed.present$`50`[100]
diff.expressed.present$`50`[500]
diff.expressed.present$`50`[800]
diff.expressed.present$`50`[700]
diff.expressed.present$`50`[600]
diff.expressed.present$`50`[550]
diff.expressed.present$`50`[560]
diff.expressed.present$`50`[570]
diff.expressed.present$`50`[580]
diff.expressed.present$`50`[590]
diff.expressed.present$`50`[585]
diff.expressed.present$`50`[589]
diff.expressed.present$`50`[587]
diff.expressed.present$`50`[586]
!is.na(genes.cancer.present$`50`, diff.expressed$`50`)
!is.na(match(genes.cancer.present$`50`, diff.expressed$`50`))
length(genes.cancer.present)
length(genes.cancer.present$`50`)
genes.cancer.present$`50`[9761]
genes.cancer.present$`50`[9760]
length(genes.cancer$`50`)
genes.cancer$`50`[16612]
genes.cancer.present <- sapply(list.cancers, function(x) #genes present in all different levels
{
as.character(hepatocytes_all$Gene[is.na(x) == F & x == 'Present' ])
})
length(genes.cancer.present$`50`)
names(genes.cancer.present) <- c("50", "75", "90", "100")
length(genes.cancer.present$`50`)
genes.cancer.present$`50`[9761]
list.cancers
list.cancers[1]
c(list.cancers)[1]
length(c(list.cancers)[1])
genes.cancer.present$`50`[900]
genes.cancer.present$`50`[9000]
genes.cancer.present$`50`[9600]
genes.cancer.present$`50`[9700]
genes.cancer.absent <- sapply(list.cancers, function(x)
{
hepatocytes_all$Gene[is.na(x) == F && x == 'Not detected']
})
genes.cancer.present$`50`[9700]
length(genes.cancer.present$`50`)
genes.cancer.present$`50`[9650]
genes.cancer.present$`50`[9670]
genes.cancer.present$`50`[9675]
genes.cancer.present$`50`[9674]
genes.cancer.present$`50`[9673]
genes.cancer.present$`50`[9672]
genes.cancer.present$`50`[9671]
length(genes.cancer.present$`50`)
length(genes.cancer.present$`75`)
genes.cancer.present$`75`[6668]
length(diff.expressed)
length(diff.expressed$`50`)
diff.expressed$`50`[3547]
diff.expressed.present$`100`[118]
match(genes.cancer.present$`50`, diff.expressed$`50`)
!is.na(match(genes.cancer.present$`50`, diff.expressed$`50`))
sum(!is.na(match(genes.cancer.present$`50`, diff.expressed$`50`)))
sum(c(!is.na(match(genes.cancer.present$`50`, diff.expressed$`50`))))
sum((is.na(match(genes.cancer.present$`50`, diff.expressed$`50`)))
)
sum(!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`)))
which(!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`)))
length(which(!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`))))
diff.expressed$`100`[(!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`)))]
diff.expressed$`100`[3289]
class(diff.expressed$`100`)
length(diff.expressed$`100`)
diff.expressed$`100`[7]
genes.cancer.present[2]
genes.cancer.present$`100`[2]
diff.expressed$`100`[7]
genes.cancer.present$`100`[7]
match(c(1,3,4), c(1,2,4))
c(1,2,4)[!is.na(c(1,NA,3))]
match(genes.cancer.present$`100`, diff.expressed$`100`)
diff.expressed$`100`[3]
genes.cancer.present$`100`[7]
!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`))
length(genes.cancer.present[!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`))])
genes.cancer.present[!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`))][118]
genes.cancer.present[!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`))][117]
genes.cancer.present[!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`))][100]
genes.cancer.present$`100`[!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`))][100]
genes.cancer.present$`100`[!is.na(match(genes.cancer.present$`100`, diff.expressed$`100`))][118]
find.gene.mismatch <- function(gene.list.1, gene.list.2)
{
return(gene.list.1[!is.na(match(gene.list.1, gene.list.2))])
}
diff.expressed.present = mapply(function(x,y)
{
find.gene.mismatch(x,y)
},genes.cancer.present, diff.expressed)
names(diff.expressed) <- c("50", "75", "90", "100")
names(diff.expressed.present) <- c("50", "75", "90", "100")
length(diff.expressed.present$`100`[118])
diff.expressed.present$`100`[118]
diff.expressed.present$`100`[117]
diff.expressed.present$`100`[116]
diff.expressed.present$`50`[116]
diff.expressed.present$`50`[1611]
diff.expressed.present$`50`[1613]
diff.expressed.present$`50`[1614]
write(diff.expressed.present$`50`, 'diff.expressed.present.50.txt')
write(diff.expressed.present$`75`, 'diff.expressed.present.75.txt')
write(diff.expressed.present$`90`, 'diff.expressed.present.90.txt')
write(diff.expressed.present$`100`, 'diff.expressed.present.100.txt')
View(hcc_data)
View(hcc_data)
colnames(hcc_data)
colnames(hcc_data)[1]
colnames(hcc_data)[2]
for(i in 1:length(as.character(hcc_data$GENES)))
seq(1:3)
for (j in 2:length(colnames(hcc_data)))
print(J)
for (j in 2:length(colnames(hcc_data)))
print(j)
colnames(hcc_data)[-1]
colnames(hcc_data)[1]
colnames(hcc_data)[-1:]
colnames(hcc_data)[6:7]
patient.ids = colnames(hcc_data)[2:length(colnames(hcc_data))]
patient.ids
a = c(1,2)
b = c(1, a)
b
remove(b)
b = c(1, c(a))
b
remove(b)
b = c(c(1), a)
b
remove(b)
b = list(1,a)
b
b[1]
b[2]
b[2][2]
b[[2]][2]
b = c(b)
b
b[1]
b[2]
patient.similarites = list()
patient.ids = colnames(hcc_data)[2:length(colnames(hcc_data))]
b = list(1,a)
b = list(1,b)
b
b[1]
b[[2]]
b[[3]]
b = c(b)
b
b[1]
b[2]
b[3]
b = 0
b
a
b = list(1, a)
b
b = c(b)
b
b = list(b,3)
b
b[3]
b = []
b = 0
b = c(1,2)
b = c()
b = list(1, a)
b
unlist(b)
b = list(1, a)
b = list(1, b)
b
unlist(b)
b = list(1, b)
b
c = c(b,2)
c
unlist(c)\
unlist(c)
