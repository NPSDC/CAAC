{
    "contents" : "hcc_data = read.csv('C:/Users/NoorPratap/Dropbox/honours/Extract/hcc_data/msb145122-sup-0006-Dataset3/Dataset 3.csv')\nlev = levels(hcc_data$Patient.2177)\ngenes = as.character(hcc_data$GENES[which( hcc_data$Patient.2177 == lev[3] | hcc_data$Patient.2177 == lev[1] | \n                                      hcc_data$Patient.2177 == lev[4])]) #contains genes present(high,med,low) in patient 1\nwrite(genes, 'hcc_genes.txt') #contains all present genes in patient 1 in high conc\nhepatocytes_all = normal.liver[which(normal.liver$Cell.type == \"hepatocytes\"),] # Will combine high,med, low\nhepatocytes_all$Level = set.level(hepatocytes_all$Level, conc.hep, 2)\ngenes.normal.hep.present = as.character(hepatocytes_all$Gene[which(hepatocytes_all$Level == 'Present')])\n\nwrite(genes.normal.hep.present, 'hep_normal_genes.txt')\nmod.canc.liver.2 = data.frame(Gene = rep(unique(cancer.liver$Gene),2),  #Contains the modified levels of liver cancer\n                              Level = factor(rep(c(\"Present\", \"Not detected\"), l)), #and their levels w.r.t proportions\n                              count = rep(0L, 2*l), total = rep(0L, 2*l))\n\ni = 0\nfor (x in unique.cancer.genes) #Sets the modified cancer liver with thresholds and counts\n{\n  genes.indexes = cancer.liver$Gene == x\n  mod.canc.liver.2$Gene[c(2*i +1 , 2*i + 2)] <- x\n  mod.canc.liver.2$Level[c(2*i +1 , 2*i + 2)] <- c(\"Present\", \"Not detected\")\n  mod.canc.liver.2$count[c(2*i +1 , 2*i + 2)] <- c(cancer.liver$Count.patients[which(genes.indexes & high.indexes)]\n                                                 + cancer.liver$Count.patients[which(genes.indexes & med.indexes)]\n                                                + cancer.liver$Count.patients[which(genes.indexes & low.indexes)], \n                                                   cancer.liver$Count.patients[which(genes.indexes & not.det.indexes)] )\n  mod.canc.liver.2$total[c(2*i +1 , 2*i + 2)] <- mod.canc.liver.2$count[2*i + 1] + mod.canc.liver.2$count[2*i + 2]\n  levels = sapply(c(0.5, 0.75, 0.9, 1), function(x)\n  {\n    calculate.level(x, mod.canc.liver.2$count[c(2*i + 1)], mod.canc.liver.2$count[c(2*i + 2)], c('Present', 'Not detected'))\n  })\n  mod.canc.liver.2$actual.level.50[c(2*i +1 , 2*i + 2)] <- levels[1]\n  mod.canc.liver.2$actual.level.75[c(2*i +1 , 2*i + 2)] <- levels[2]\n  mod.canc.liver.2$actual.level.90[c(2*i +1 , 2*i + 2)] <- levels[3]\n  mod.canc.liver.2$actual.level.100[c(2*i +1 , 2*i + 2)] <- levels[4]\n  i = i + 1\n}\nm = mod.canc.liver.2\nhepatocytes_all$Canc.Level.50 = m$actual.level.50[indexes.hep]\nhepatocytes_all$Canc.Level.75 = m$actual.level.75[indexes.hep]\nhepatocytes_all$Canc.Level.90 = m$actual.level.90[indexes.hep]\nhepatocytes_all$Canc.Level.100 = m$actual.level.100[indexes.hep]\n\n####Contains presence or absence of cancer w.r.t each gene in different levels of cancer\nlist.cancers = list(hepatocytes_all$Canc.Level.50, hepatocytes_all$Canc.Level.75, hepatocytes_all$Canc.Level.90, hepatocytes_all$Canc.Level.100)\n\ngenes.cancer = sapply(   #contains all genes associated with different levels of cancer (Present as well as not detected but not NA)\n        list.cancers, function(x){\n        #print(x)\n       as.character(hepatocytes_all$Gene[is.na(x) == F])\n        #print(a)\n      }\n)\nnames(genes.cancer) <- c(\"50\", \"75\", \"90\", \"100\")\n\ngenes.cancer.present <- sapply(list.cancers, function(x) #genes present in all different levels\n  {\n   as.character(hepatocytes_all$Gene[is.na(x) == F & x == 'Present' ])\n})\nnames(genes.cancer.present) <- c(\"50\", \"75\", \"90\", \"100\")\n\ngenes.cancer.absent <- sapply(list.cancers, function(x)\n  {\n    hepatocytes_all$Gene[is.na(x) == F && x == 'Not detected']\n})\nnames(genes.cancer.absent) <- c(\"50\", \"75\", \"90\", \"100\")\n\n\nfind.gene.mismatch <- function(gene.list.1, gene.list.2)\n{\n  return(gene.list.1[!is.na(match(gene.list.1, gene.list.2))])\n}\n\ndiff.expressed = get.mismatch(hepatocytes_all$Level, hepatocytes_all$Gene, list.cancers, length(hepatocytes_all$Gene))\ndiff.expressed.present = mapply(function(x,y)\n      {\n        find.gene.mismatch(x,y)\n      },genes.cancer.present, diff.expressed)\n\nnames(diff.expressed) <- c(\"50\", \"75\", \"90\", \"100\")\nnames(diff.expressed.present) <- c(\"50\", \"75\", \"90\", \"100\")\n\nwrite(diff.expressed$`50`, 'diff.expressed.50.txt')\nwrite(diff.expressed$`75`, 'diff.expressed.75.txt')\nwrite(diff.expressed$`90`, 'diff.expressed.90.txt')\nwrite(diff.expressed$`100`, 'diff.expressed.100.txt')\n\nwrite(diff.expressed.present$`50`, 'diff.expressed.present.50.txt')\nwrite(diff.expressed.present$`75`, 'diff.expressed.present.75.txt')\nwrite(diff.expressed.present$`90`, 'diff.expressed.present.90.txt')\nwrite(diff.expressed.present$`100`, 'diff.expressed.present.100.txt')\n\n\n####Comparing cancer patients\npatient.list = list(hcc_data$Patient.2177, hcc_data$Patient.2280, hcc_data$Patient.2556, hcc_data$Patient.2766,\n                    hcc_data$Patient.3196, hcc_data$Patient.3477)\npatient.ids = colnames(hcc_data)[2:length(colnames(hcc_data))] \npatient.similarites = list()\n\n\nfind.patient.similarity <- function()\n{\n  ans = sapply(patient.list, function(x)\n    {\n    sapply(patient.list, function(y)\n      {\n      as.character(hcc_data$GENES[x == y])\n    })\n    \n  })\n  return(ans)\n}\nans = find.patient.similarity()\n\nfeaturise <- function(Patient.levels, vals)\n{\n  Vectorised.levels = rep(-2, length(Patient.levels))\n  Vectorised.levels[Patient.levels == 'Weak'] = vals[2]\n  Vectorised.levels[Patient.levels == 'Moderate'] = vals[3]\n  Vectorised.levels[Patient.levels == 'Strong'] = vals[4]\n  Vectorised.levels[Patient.levels == 'Negative'] = vals[1]\n  return(Vectorised.levels)\n}\nget.featurised.levels <- function(patient.list, values)\n{\n  Levels = c()\n  Levels <- sapply(patient.list, function(x)\n    {\n      featurise(x, values)\n  })\n  names(Levels) <- patient.ids\n  return(Levels)\n}\nset.featurised.level <- function(main.data, Levels)\n{\n  Featurised.vec = hcc_data\n  Featurised.vec$Patient.2177 = Levels[,1]\n  Featurised.vec$Patient.2280 = Levels[,2]\n  Featurised.vec$Patient.2556 = Levels[,3]\n  Featurised.vec$Patient.2766 = Levels[,4]\n  Featurised.vec$Patient.3196 = Levels[,5]\n  Featurised.vec$Patient.3477 = Levels[,6]\n  return(Featurised.vec)\n}\nget.kmeans <- function(Levels)\n{\n  scaled.data = scale(t(Levels), scale=F)\n  no.of.clusters = c(2,3,4,5)\n  fits.kmeans = sapply(no.of.clusters, function(x)\n  {\n    kmeans(scaled.data, x)\n  }\n  )\n  return(fits.kmeans)\n}\nget.hcl <- function(Levels)\n{\n  scaled.data = scale(t(Levels), scale=F) \n  distance <- dist(scaled.data)\n  hc <- hclust(distance)\n  plot(hc)\n}\nLevels.1 = get.featurised.levels(patient.list, c(-1, 0, 0.5, 1))\nFeaturised.vec.1 = set.featurised.level(hcc_data, Levels.1)\n\nLevels.2 <- get.featurised.levels(patient.list, c(-1, 1, 1, 1))\nFeaturised.vec.2 = set.featurised.level(hcc_data, Levels.2)\n\nfit.kmeans.1 = get.kmeans(Levels.1)\nfit.kmeans.2 = get.kmeans(Levels.2)\n\nget.hcl(Levels.1)\nget.hcl(Levels.2)\n\nhcc.data.complete = read.csv('C:/Users/NoorPratap/Dropbox/honours/Extract/hcc_data/msb145122-sup-0008-Dataset5/Dataset 5.csv')\nLevels.3 = get.featurised.levels(patient.list, c(-1, 1, 1, 1))\nFeaturised.vec.3 = set.featurised.level(hcc_data, Levels.2)\nfit.kmeans.3 = get.kmeans(Levels.3)\nget.hcl(Levels.3)\n",
    "created" : 1447050138272.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2860077352",
    "id" : "ECF4C71C",
    "lastKnownWriteTime" : 1447066514,
    "path" : "C:/Users/NoorPratap/Dropbox/honours/Extract/Map_higher.R",
    "project_path" : "Map_higher.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}